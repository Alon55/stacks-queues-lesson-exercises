{"numFailedTestSuites":1,"numFailedTests":1,"numPassedTestSuites":1,"numPassedTests":7,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTotalTestSuites":2,"numTotalTests":8,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1568622539381,"success":false,"testResults":[{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mExercise 1 › Should create a `dequeue` method which removes the front element of the queue\u001b[39m\u001b[22m\n\n    when running the 'peek' method on an empty queue the method should return 'null'__stacktrace__\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 | \u001b[39m    it(\u001b[32m'Should create a `dequeue` method which removes the front element of the queue'\u001b[39m\u001b[33m,\u001b[39m \u001b[36mfunction\u001b[39m () {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 | \u001b[39m        \u001b[36mconst\u001b[39m queue \u001b[33m=\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mQueue\u001b[39m()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 26 | \u001b[39m        expect(queue\u001b[33m.\u001b[39mpeek()\u001b[33m,\u001b[39m \u001b[32m`when running the 'peek' method on an empty queue the method should return 'null'`\u001b[39m)\u001b[33m.\u001b[39mtoBe(\u001b[36mnull\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                                                                                 \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 28 | \u001b[39m        queue\u001b[33m.\u001b[39menqueue(\u001b[35m1\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 | \u001b[39m        queue\u001b[33m.\u001b[39menqueue(\u001b[35m2\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:26:114)\u001b[2m\u001b[22m\n","numFailingTests":1,"numPassingTests":3,"numPendingTests":0,"perfStats":{"end":1568622540238,"start":1568622539847},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/danny/code/elevation/tests/stacks-queues-lesson-exercises-solutions/tests/exercises/ex-1.test.js","testResults":[{"ancestorTitles":["Exercise 1"],"duration":8,"failureMessages":[],"fullName":"Exercise 1 Should create an `enqueue` method which adds a new element to the end of the queue","location":null,"numPassingAsserts":0,"status":"passed","title":"Should create an `enqueue` method which adds a new element to the end of the queue"},{"ancestorTitles":["Exercise 1"],"duration":2,"failureMessages":[],"fullName":"Exercise 1 Should create a `peek` method which returns the front element of the queue","location":null,"numPassingAsserts":0,"status":"passed","title":"Should create a `peek` method which returns the front element of the queue"},{"ancestorTitles":["Exercise 1"],"duration":8,"failureMessages":["Error: when running the 'peek' method on an empty queue the method should return 'null'__stacktrace__\n    at Object.toBe (/Users/danny/code/elevation/tests/stacks-queues-lesson-exercises-solutions/tests/exercises/ex-1.test.js:26:114)\n    at Object.asyncJestTest (/Users/danny/code/elevation/tests/stacks-queues-lesson-exercises-solutions/node_modules/jest-jasmine2/build/jasmine_async.js:108:37)\n    at resolve (/Users/danny/code/elevation/tests/stacks-queues-lesson-exercises-solutions/node_modules/jest-jasmine2/build/queue_runner.js:56:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/danny/code/elevation/tests/stacks-queues-lesson-exercises-solutions/node_modules/jest-jasmine2/build/queue_runner.js:43:19)\n    at promise.then (/Users/danny/code/elevation/tests/stacks-queues-lesson-exercises-solutions/node_modules/jest-jasmine2/build/queue_runner.js:87:41)"],"fullName":"Exercise 1 Should create a `dequeue` method which removes the front element of the queue","location":null,"numPassingAsserts":0,"status":"failed","title":"Should create a `dequeue` method which removes the front element of the queue"},{"ancestorTitles":["Exercise 1"],"duration":7,"failureMessages":[],"fullName":"Exercise 1 Should create an `isEmpty` method which returns `true` if the queue is empty and `false` otherwise","location":null,"numPassingAsserts":0,"status":"passed","title":"Should create an `isEmpty` method which returns `true` if the queue is empty and `false` otherwise"}],"sourceMaps":{},"skipped":false,"leaks":false},{"console":null,"failureMessage":null,"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"perfStats":{"end":1568622540308,"start":1568622540249},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/danny/code/elevation/tests/stacks-queues-lesson-exercises-solutions/tests/spot-check-1/ex-1.test.js","testResults":[{"ancestorTitles":["exercise1"],"duration":3,"failureMessages":[],"fullName":"exercise1 Should create a `push` method which adds a new element to the top of the stack","location":null,"numPassingAsserts":0,"status":"passed","title":"Should create a `push` method which adds a new element to the top of the stack"},{"ancestorTitles":["exercise1"],"duration":6,"failureMessages":[],"fullName":"exercise1 Should create a `peek` method which returns the top element of the stack","location":null,"numPassingAsserts":0,"status":"passed","title":"Should create a `peek` method which returns the top element of the stack"},{"ancestorTitles":["exercise1"],"duration":11,"failureMessages":[],"fullName":"exercise1 Should create a `pop` method which removes the top element of the stack","location":null,"numPassingAsserts":0,"status":"passed","title":"Should create a `pop` method which removes the top element of the stack"},{"ancestorTitles":["exercise1"],"duration":6,"failureMessages":[],"fullName":"exercise1 Should create an `isEmpty` method which returns `true` if the stack is empty and `false` otherwise","location":null,"numPassingAsserts":0,"status":"passed","title":"Should create an `isEmpty` method which returns `true` if the stack is empty and `false` otherwise"}],"sourceMaps":{},"skipped":false,"leaks":false}],"wasInterrupted":false}